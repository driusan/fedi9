#!/bin/rc

rfork

. /bin/fedi9/rclib

while(~ $1 -*){
	switch($1){
	case -g
		getobject=true
	case -u
		updateobject=true
	case *
		echo Unhandled option $1 >[1=2]
	}
	shift
}
objectid=$1
shift

if (~ $objectid ''){
	echo Missing object id >[1=2]
	exit 'no object id'
}
if (~ $updateobject true) {
	cachepath=`{ndb/query -f $objectsdb id $objectid cachepath}
	if (~ $"cachepath ''){
		echo can not determine cachepath of $objectid to update >[1=2]
		updateobject=false
	}
}
if not {
	if (! ~ `{ndb/query -f $objectsdb id $objectid} ''){
		echo $objectid already in database >[1=2]
		exit 'already added'
	}
}

if (~ $"cachepath ''){
	cachepath=objects/^`{echo $objectid | sed -e 's#(http[s]?://)##'}
	mkdir -p $fedi9lib/`{basename -d $cachepath}
}

fedi9/jsonfs

if (~ $getobject true){
	fedi9/get $objectid > /mnt/json/ctl
}
if not {
	cat > /mnt/json/ctl
}
if (! ~ $objectid `{getStringKey id}){
	echo Object id does not match id ($objectid) >[1=2]
	echo 'id='$"objectid 'valid=false' >> $deaddb
	exit 'bad object id'
}
filename=$fedi9lib^/^$cachepath

if (~ $updateobject true){
	cp /mnt/json/raw $"filename
	chmod 0644 $"filename
	exit ''
}

objtype=`{getStringKey type}
switch($objtype){
case Note
	attributedTo=`{getStringKey attributedTo}
	if (~ `"{ndb/query -f $actorsdb id $attributedTo} ''){
		echo New actor
		fedi9/get $"attributedTo | fedi9/personrecord >> $actorsdb
	}
	if not {
		echo Attributed to $"attributedTo
	}
	objUrl=`{getStringKey url}
	if (test -e /mnt/json/values/inReplyTo/jsontype){
		switch(`{cat /mnt/json/values/inReplyTo/jsontype}){
		case string
			inReplyTo=`{cat /mnt/json/values/inReplyTo/value}
		case null
			inReplyTo=null
		case *
			echo 'Could not handle inReplyTo type' >[1=2]
			exit 'unhandled inReplyTo'

		}
	}
	if not {
		inReplyTo=null
	}
	publishedTime=`{getStringKey published}
	cp /mnt/json/raw $"filename
	chmod 0644 $"filename

	cat >> $objectsdb <<EOR
id=$objectid cachepath=$cachepath
	attributedTo=$attributedTo
	inReplyTo=$inReplyTo
	url=$objUrl
	publishedTime=$publishedTime
	type=Note
EOR
case Question
	attributedTo=`{getStringKey attributedTo}
	if (~ `"{ndb/query -f $actorsdb id $attributedTo} ''){
		echo New actor
		fedi9/get $"attributedTo | fedi9/personrecord >> $actorsdb
	}
	if not {
		echo Attributed to $"attributedTo
	}
	objUrl=`{getStringKey url}
	if (test -e /mnt/json/values/inReplyTo/type){
		switch(`{cat /mnt/json/values/inReplyTo/jsontype}){
		case string
			inReplyTo=`{cat /mnt/json/values/inReplyTo/value}
		case null
			inReplyTo=null
		case *
			echo 'Could not handle inReplyTo type' >[1=2]
			exit 'unhandled inReplyTo'

		}
	}
	if not {
		inReplyTo=null
	}
	publishedTime=`{getStringKey published}
	endTime=`{getStringKey endTime}
	cp /mnt/json/raw $"filename
	chmod 0644 $"filename

	cat >> $objectsdb <<EOR
id=$objectid cachepath=$cachepath
	attributedTo=$attributedTo
	inReplyTo=$inReplyTo
	url=$objUrl
	publishedTime=$publishedTime
	endTime=$endTime
	type=Question
EOR

case *
	echo Unhandled object type $"objtype >[1=2]
	exit 'unknown object type'
}
ndb/mkhash $objectsdb id
exit ''
